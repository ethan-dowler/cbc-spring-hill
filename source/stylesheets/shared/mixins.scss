// Page Components
@mixin Slice {
  @include scut-padding(cubits(4) cubits(2));
}
@mixin Slice-title {
  @include scut-margin(n n cubits(1));
  @include font(m, bold);

  @include breakpoint(lap) {
    @include font(l);
  }
}
@mixin Slice-body {
  @include font(s);
  @include scut-center-block($width--content);
}
@mixin Hero {
  @include scut-padding(12rem n);
  color: $color--white;
  border-bottom: 0.5rem solid $color--secondary;
}

// Typography
@mixin font($size, $options: none) {
  @if $size == l { 
    font-size: $font-size--large;
    line-height: $line-height--large;
  }
  @else if $size == m {
    font-size: $font-size--medium;
    line-height: $line-height--medium;
  }
  @else if $size == s {
    font-size: $font-size--small;
    line-height: $line-height--small;
  }
  @else {
    @error "#{$size} is not a font size";
  }

  @if str-index(unquote("#{$options}"), 'bold') {
    @include bold;
  }
}
@mixin bold {
  font-weight: 500;
}

// Utility
@mixin breakpoint($point) {
  @if $point == desk {
    @media (min-width: 75rem) { @content ; }
 }
  @else if $point == lap {
    @media (min-width: 56.25rem) { @content ; }
 }
  @else if $point == hands {
    @media (min-width: 37.5em)  { @content ; }
 }
 @else if $point == palm {
    @media (max-width: 37.5em)  { @content ; }
 }
 @else {
   @error "#{$point} is not a valid breakpoint";
 }
}
@function cubits($number) {
  @return $cubit * $number;
}